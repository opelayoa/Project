package com.tiendas3b.almacen.db.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import com.tiendas3b.almacen.db.dao.DecreaseMP;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "DECREASE_MP".
*/
public class DecreaseMPDao extends AbstractDao<DecreaseMP, Void> {

    public static final String TABLENAME = "DECREASE_MP";

    /**
     * Properties of entity DecreaseMP.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Iclave = new Property(0, Long.class, "iclave", false, "ICLAVE");
        public final static Property Description = new Property(1, String.class, "description", false, "DESCRIPTION");
        public final static Property Amount = new Property(2, Integer.class, "amount", false, "AMOUNT");
        public final static Property Type = new Property(3, Long.class, "type", false, "TYPE");
        public final static Property Obs = new Property(4, Long.class, "obs", false, "OBS");
        public final static Property ObsLog = new Property(5, Long.class, "obsLog", false, "OBS_LOG");
        public final static Property Cost = new Property(6, Float.class, "cost", false, "COST");
        public final static Property ObsStr = new Property(7, String.class, "obsStr", false, "OBS_STR");
        public final static Property Odc = new Property(8, Integer.class, "odc", false, "ODC");
    };


    public DecreaseMPDao(DaoConfig config) {
        super(config);
    }
    
    public DecreaseMPDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"DECREASE_MP\" (" + //
                "\"ICLAVE\" INTEGER," + // 0: iclave
                "\"DESCRIPTION\" TEXT," + // 1: description
                "\"AMOUNT\" INTEGER," + // 2: amount
                "\"TYPE\" INTEGER," + // 3: type
                "\"OBS\" INTEGER," + // 4: obs
                "\"OBS_LOG\" INTEGER," + // 5: obsLog
                "\"COST\" REAL," + // 6: cost
                "\"OBS_STR\" TEXT," + // 7: obsStr
                "\"ODC\" INTEGER);"); // 8: odc
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"DECREASE_MP\"";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, DecreaseMP entity) {
        stmt.clearBindings();
 
        Long iclave = entity.getIclave();
        if (iclave != null) {
            stmt.bindLong(1, iclave);
        }
 
        String description = entity.getDescription();
        if (description != null) {
            stmt.bindString(2, description);
        }
 
        Integer amount = entity.getAmount();
        if (amount != null) {
            stmt.bindLong(3, amount);
        }
 
        Long type = entity.getType();
        if (type != null) {
            stmt.bindLong(4, type);
        }
 
        Long obs = entity.getObs();
        if (obs != null) {
            stmt.bindLong(5, obs);
        }
 
        Long obsLog = entity.getObsLog();
        if (obsLog != null) {
            stmt.bindLong(6, obsLog);
        }
 
        Float cost = entity.getCost();
        if (cost != null) {
            stmt.bindDouble(7, cost);
        }
 
        String obsStr = entity.getObsStr();
        if (obsStr != null) {
            stmt.bindString(8, obsStr);
        }
 
        Integer odc = entity.getOdc();
        if (odc != null) {
            stmt.bindLong(9, odc);
        }
    }

    /** @inheritdoc */
    @Override
    public Void readKey(Cursor cursor, int offset) {
        return null;
    }    

    /** @inheritdoc */
    @Override
    public DecreaseMP readEntity(Cursor cursor, int offset) {
        DecreaseMP entity = new DecreaseMP( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // iclave
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // description
            cursor.isNull(offset + 2) ? null : cursor.getInt(offset + 2), // amount
            cursor.isNull(offset + 3) ? null : cursor.getLong(offset + 3), // type
            cursor.isNull(offset + 4) ? null : cursor.getLong(offset + 4), // obs
            cursor.isNull(offset + 5) ? null : cursor.getLong(offset + 5), // obsLog
            cursor.isNull(offset + 6) ? null : cursor.getFloat(offset + 6), // cost
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // obsStr
            cursor.isNull(offset + 8) ? null : cursor.getInt(offset + 8) // odc
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, DecreaseMP entity, int offset) {
        entity.setIclave(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setDescription(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setAmount(cursor.isNull(offset + 2) ? null : cursor.getInt(offset + 2));
        entity.setType(cursor.isNull(offset + 3) ? null : cursor.getLong(offset + 3));
        entity.setObs(cursor.isNull(offset + 4) ? null : cursor.getLong(offset + 4));
        entity.setObsLog(cursor.isNull(offset + 5) ? null : cursor.getLong(offset + 5));
        entity.setCost(cursor.isNull(offset + 6) ? null : cursor.getFloat(offset + 6));
        entity.setObsStr(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setOdc(cursor.isNull(offset + 8) ? null : cursor.getInt(offset + 8));
     }
    
    /** @inheritdoc */
    @Override
    protected Void updateKeyAfterInsert(DecreaseMP entity, long rowId) {
        // Unsupported or missing PK type
        return null;
    }
    
    /** @inheritdoc */
    @Override
    public Void getKey(DecreaseMP entity) {
        return null;
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
