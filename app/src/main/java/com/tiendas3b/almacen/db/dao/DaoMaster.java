package com.tiendas3b.almacen.db.dao;

import android.content.Context;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteDatabase.CursorFactory;
import android.database.sqlite.SQLiteOpenHelper;
import android.util.Log;
import de.greenrobot.dao.AbstractDaoMaster;
import de.greenrobot.dao.identityscope.IdentityScopeType;

import com.tiendas3b.almacen.db.dao.RegionDao;
import com.tiendas3b.almacen.db.dao.UserDao;
import com.tiendas3b.almacen.db.dao.ConfigProviderDao;
import com.tiendas3b.almacen.db.dao.ProviderDao;
import com.tiendas3b.almacen.db.dao.TimetableReceiptDao;
import com.tiendas3b.almacen.db.dao.StoreDao;
import com.tiendas3b.almacen.db.dao.ProviderEpackageDao;
import com.tiendas3b.almacen.db.dao.EPackageDao;
import com.tiendas3b.almacen.db.dao.AreaDao;
import com.tiendas3b.almacen.db.dao.RackDao;
import com.tiendas3b.almacen.db.dao.RackLevelDao;
import com.tiendas3b.almacen.db.dao.PositionDao;
import com.tiendas3b.almacen.db.dao.PositionPackageDao;
import com.tiendas3b.almacen.db.dao.EpackageTruckDao;
import com.tiendas3b.almacen.db.dao.EpackageDownloadDao;
import com.tiendas3b.almacen.db.dao.TruckPackageDao;
import com.tiendas3b.almacen.db.dao.OrderTypeDao;
import com.tiendas3b.almacen.db.dao.LevelDao;
import com.tiendas3b.almacen.db.dao.ArticleStateDao;
import com.tiendas3b.almacen.db.dao.ReceiptSheetDao;
import com.tiendas3b.almacen.db.dao.DateTypeDao;
import com.tiendas3b.almacen.db.dao.UnitDao;
import com.tiendas3b.almacen.db.dao.VArticleDao;
import com.tiendas3b.almacen.db.dao.StorePickingStatusDao;
import com.tiendas3b.almacen.db.dao.OrderPickingDao;
import com.tiendas3b.almacen.db.dao.OrderDetailDao;
import com.tiendas3b.almacen.db.dao.OrderPickingCaptureDao;
import com.tiendas3b.almacen.db.dao.OrderDetailCaptureDao;
import com.tiendas3b.almacen.db.dao.ComplaintCatDao;
import com.tiendas3b.almacen.db.dao.CheckDao;
import com.tiendas3b.almacen.db.dao.BuyDetailDao;
import com.tiendas3b.almacen.db.dao.ExpressReceiptDao;
import com.tiendas3b.almacen.db.dao.ExpressProviderDao;
import com.tiendas3b.almacen.db.dao.ExpressArticleDao;
import com.tiendas3b.almacen.db.dao.ReceiptSheetDetailCaptureDao;
import com.tiendas3b.almacen.db.dao.BuyDao;
import com.tiendas3b.almacen.db.dao.ReceiptSheetCaptureDao;
import com.tiendas3b.almacen.db.dao.ReceiptSheetDetailDao;
import com.tiendas3b.almacen.db.dao.GlobalDecreaseDao;
import com.tiendas3b.almacen.db.dao.ActivityDao;
import com.tiendas3b.almacen.db.dao.TruckDao;
import com.tiendas3b.almacen.db.dao.DriverDao;
import com.tiendas3b.almacen.db.dao.RoadmapDao;
import com.tiendas3b.almacen.db.dao.RoadmapDetailDao;
import com.tiendas3b.almacen.db.dao.RouteDao;
import com.tiendas3b.almacen.db.dao.InputTransferenceDao;
import com.tiendas3b.almacen.db.dao.InputTransferenceDetailDao;
import com.tiendas3b.almacen.db.dao.UtilizationDao;
import com.tiendas3b.almacen.db.dao.TimetableInfoDao;
import com.tiendas3b.almacen.db.dao.TimetablePickingDao;
import com.tiendas3b.almacen.db.dao.PendingDocumentDao;
import com.tiendas3b.almacen.db.dao.PendingDocumentDetailDao;
import com.tiendas3b.almacen.db.dao.ArticleTransferenceDao;
import com.tiendas3b.almacen.db.dao.ArticleResearchDao;
import com.tiendas3b.almacen.db.dao.ComplaintDao;
import com.tiendas3b.almacen.db.dao.ScannerCountDao;
import com.tiendas3b.almacen.db.dao.ObservationTypeDao;
import com.tiendas3b.almacen.db.dao.ArticleDecreaseDao;
import com.tiendas3b.almacen.db.dao.MessageDao;
import com.tiendas3b.almacen.db.dao.ReceiptExpressLogDao;
import com.tiendas3b.almacen.db.dao.BarcodeDao;
import com.tiendas3b.almacen.db.dao.DecreaseMPDao;
import com.tiendas3b.almacen.db.dao.FMuestrasDao;
import com.tiendas3b.almacen.db.dao.ReceiptCommentsDao;
import com.tiendas3b.almacen.db.dao.TripDao;
import com.tiendas3b.almacen.db.dao.TripDetailDao;
import com.tiendas3b.almacen.db.dao.QuestionDao;
import com.tiendas3b.almacen.db.dao.AnswerDao;
import com.tiendas3b.almacen.db.dao.QuestionAnswerDao;
import com.tiendas3b.almacen.db.dao.FormDao;
import com.tiendas3b.almacen.db.dao.FormQuestionDao;
import com.tiendas3b.almacen.db.dao.FormAppliedDao;
import com.tiendas3b.almacen.db.dao.FormAppliedResultDao;
import com.tiendas3b.almacen.db.dao.SheetTripDao;
import com.tiendas3b.almacen.db.dao.ShipmentControlDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * Master of DAO (schema version 28): knows all DAOs.
*/
public class DaoMaster extends AbstractDaoMaster {
    public static final int SCHEMA_VERSION = 28;

    /** Creates underlying database table using DAOs. */
    public static void createAllTables(SQLiteDatabase db, boolean ifNotExists) {
        RegionDao.createTable(db, ifNotExists);
        UserDao.createTable(db, ifNotExists);
        ConfigProviderDao.createTable(db, ifNotExists);
        ProviderDao.createTable(db, ifNotExists);
        TimetableReceiptDao.createTable(db, ifNotExists);
        StoreDao.createTable(db, ifNotExists);
        ProviderEpackageDao.createTable(db, ifNotExists);
        EPackageDao.createTable(db, ifNotExists);
        AreaDao.createTable(db, ifNotExists);
        RackDao.createTable(db, ifNotExists);
        RackLevelDao.createTable(db, ifNotExists);
        PositionDao.createTable(db, ifNotExists);
        PositionPackageDao.createTable(db, ifNotExists);
        EpackageTruckDao.createTable(db, ifNotExists);
        EpackageDownloadDao.createTable(db, ifNotExists);
        TruckPackageDao.createTable(db, ifNotExists);
        OrderTypeDao.createTable(db, ifNotExists);
        LevelDao.createTable(db, ifNotExists);
        ArticleStateDao.createTable(db, ifNotExists);
        ReceiptSheetDao.createTable(db, ifNotExists);
        DateTypeDao.createTable(db, ifNotExists);
        UnitDao.createTable(db, ifNotExists);
        VArticleDao.createTable(db, ifNotExists);
        StorePickingStatusDao.createTable(db, ifNotExists);
        OrderPickingDao.createTable(db, ifNotExists);
        OrderDetailDao.createTable(db, ifNotExists);
        OrderPickingCaptureDao.createTable(db, ifNotExists);
        OrderDetailCaptureDao.createTable(db, ifNotExists);
        ComplaintCatDao.createTable(db, ifNotExists);
        CheckDao.createTable(db, ifNotExists);
        BuyDetailDao.createTable(db, ifNotExists);
        ExpressReceiptDao.createTable(db, ifNotExists);
        ExpressProviderDao.createTable(db, ifNotExists);
        ExpressArticleDao.createTable(db, ifNotExists);
        ReceiptSheetDetailCaptureDao.createTable(db, ifNotExists);
        BuyDao.createTable(db, ifNotExists);
        ReceiptSheetCaptureDao.createTable(db, ifNotExists);
        ReceiptSheetDetailDao.createTable(db, ifNotExists);
        GlobalDecreaseDao.createTable(db, ifNotExists);
        ActivityDao.createTable(db, ifNotExists);
        TruckDao.createTable(db, ifNotExists);
        DriverDao.createTable(db, ifNotExists);
        RoadmapDao.createTable(db, ifNotExists);
        RoadmapDetailDao.createTable(db, ifNotExists);
        RouteDao.createTable(db, ifNotExists);
        InputTransferenceDao.createTable(db, ifNotExists);
        InputTransferenceDetailDao.createTable(db, ifNotExists);
        UtilizationDao.createTable(db, ifNotExists);
        TimetableInfoDao.createTable(db, ifNotExists);
        TimetablePickingDao.createTable(db, ifNotExists);
        PendingDocumentDao.createTable(db, ifNotExists);
        PendingDocumentDetailDao.createTable(db, ifNotExists);
        ArticleTransferenceDao.createTable(db, ifNotExists);
        ArticleResearchDao.createTable(db, ifNotExists);
        ComplaintDao.createTable(db, ifNotExists);
        ScannerCountDao.createTable(db, ifNotExists);
        ObservationTypeDao.createTable(db, ifNotExists);
        ArticleDecreaseDao.createTable(db, ifNotExists);
        MessageDao.createTable(db, ifNotExists);
        ReceiptExpressLogDao.createTable(db, ifNotExists);
        BarcodeDao.createTable(db, ifNotExists);
        DecreaseMPDao.createTable(db, ifNotExists);
        FMuestrasDao.createTable(db, ifNotExists);
        ReceiptCommentsDao.createTable(db, ifNotExists);
        TripDao.createTable(db, ifNotExists);
        TripDetailDao.createTable(db, ifNotExists);
        QuestionDao.createTable(db, ifNotExists);
        AnswerDao.createTable(db, ifNotExists);
        QuestionAnswerDao.createTable(db, ifNotExists);
        FormDao.createTable(db, ifNotExists);
        FormQuestionDao.createTable(db, ifNotExists);
        FormAppliedDao.createTable(db, ifNotExists);
        FormAppliedResultDao.createTable(db, ifNotExists);
        SheetTripDao.createTable(db, ifNotExists);
        ShipmentControlDao.createTable(db, ifNotExists);
    }
    
    /** Drops underlying database table using DAOs. */
    public static void dropAllTables(SQLiteDatabase db, boolean ifExists) {
        RegionDao.dropTable(db, ifExists);
        UserDao.dropTable(db, ifExists);
        ConfigProviderDao.dropTable(db, ifExists);
        ProviderDao.dropTable(db, ifExists);
        TimetableReceiptDao.dropTable(db, ifExists);
        StoreDao.dropTable(db, ifExists);
        ProviderEpackageDao.dropTable(db, ifExists);
        EPackageDao.dropTable(db, ifExists);
        AreaDao.dropTable(db, ifExists);
        RackDao.dropTable(db, ifExists);
        RackLevelDao.dropTable(db, ifExists);
        PositionDao.dropTable(db, ifExists);
        PositionPackageDao.dropTable(db, ifExists);
        EpackageTruckDao.dropTable(db, ifExists);
        EpackageDownloadDao.dropTable(db, ifExists);
        TruckPackageDao.dropTable(db, ifExists);
        OrderTypeDao.dropTable(db, ifExists);
        LevelDao.dropTable(db, ifExists);
        ArticleStateDao.dropTable(db, ifExists);
        ReceiptSheetDao.dropTable(db, ifExists);
        DateTypeDao.dropTable(db, ifExists);
        UnitDao.dropTable(db, ifExists);
        VArticleDao.dropTable(db, ifExists);
        StorePickingStatusDao.dropTable(db, ifExists);
        OrderPickingDao.dropTable(db, ifExists);
        OrderDetailDao.dropTable(db, ifExists);
        OrderPickingCaptureDao.dropTable(db, ifExists);
        OrderDetailCaptureDao.dropTable(db, ifExists);
        ComplaintCatDao.dropTable(db, ifExists);
        CheckDao.dropTable(db, ifExists);
        BuyDetailDao.dropTable(db, ifExists);
        ExpressReceiptDao.dropTable(db, ifExists);
        ExpressProviderDao.dropTable(db, ifExists);
        ExpressArticleDao.dropTable(db, ifExists);
        ReceiptSheetDetailCaptureDao.dropTable(db, ifExists);
        BuyDao.dropTable(db, ifExists);
        ReceiptSheetCaptureDao.dropTable(db, ifExists);
        ReceiptSheetDetailDao.dropTable(db, ifExists);
        GlobalDecreaseDao.dropTable(db, ifExists);
        ActivityDao.dropTable(db, ifExists);
        TruckDao.dropTable(db, ifExists);
        DriverDao.dropTable(db, ifExists);
        RoadmapDao.dropTable(db, ifExists);
        RoadmapDetailDao.dropTable(db, ifExists);
        RouteDao.dropTable(db, ifExists);
        InputTransferenceDao.dropTable(db, ifExists);
        InputTransferenceDetailDao.dropTable(db, ifExists);
        UtilizationDao.dropTable(db, ifExists);
        TimetableInfoDao.dropTable(db, ifExists);
        TimetablePickingDao.dropTable(db, ifExists);
        PendingDocumentDao.dropTable(db, ifExists);
        PendingDocumentDetailDao.dropTable(db, ifExists);
        ArticleTransferenceDao.dropTable(db, ifExists);
        ArticleResearchDao.dropTable(db, ifExists);
        ComplaintDao.dropTable(db, ifExists);
        ScannerCountDao.dropTable(db, ifExists);
        ObservationTypeDao.dropTable(db, ifExists);
        ArticleDecreaseDao.dropTable(db, ifExists);
        MessageDao.dropTable(db, ifExists);
        ReceiptExpressLogDao.dropTable(db, ifExists);
        BarcodeDao.dropTable(db, ifExists);
        DecreaseMPDao.dropTable(db, ifExists);
        FMuestrasDao.dropTable(db, ifExists);
        ReceiptCommentsDao.dropTable(db, ifExists);
        TripDao.dropTable(db, ifExists);
        TripDetailDao.dropTable(db, ifExists);
        QuestionDao.dropTable(db, ifExists);
        AnswerDao.dropTable(db, ifExists);
        QuestionAnswerDao.dropTable(db, ifExists);
        FormDao.dropTable(db, ifExists);
        FormQuestionDao.dropTable(db, ifExists);
        FormAppliedDao.dropTable(db, ifExists);
        FormAppliedResultDao.dropTable(db, ifExists);
        SheetTripDao.dropTable(db, ifExists);
        ShipmentControlDao.dropTable(db, ifExists);
    }
    
    public static abstract class OpenHelper extends SQLiteOpenHelper {

        public OpenHelper(Context context, String name, CursorFactory factory) {
            super(context, name, factory, SCHEMA_VERSION);
        }

        @Override
        public void onCreate(SQLiteDatabase db) {
            Log.i("greenDAO", "Creating tables for schema version " + SCHEMA_VERSION);
            createAllTables(db, false);
        }
    }
    
    /** WARNING: Drops all table on Upgrade! Use only during development. */
    public static class DevOpenHelper extends OpenHelper {
        public DevOpenHelper(Context context, String name, CursorFactory factory) {
            super(context, name, factory);
        }

        @Override
        public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
            Log.i("greenDAO", "Upgrading schema from version " + oldVersion + " to " + newVersion + " by dropping all tables");
            dropAllTables(db, true);
            onCreate(db);
        }
    }

    public DaoMaster(SQLiteDatabase db) {
        super(db, SCHEMA_VERSION);
        registerDaoClass(RegionDao.class);
        registerDaoClass(UserDao.class);
        registerDaoClass(ConfigProviderDao.class);
        registerDaoClass(ProviderDao.class);
        registerDaoClass(TimetableReceiptDao.class);
        registerDaoClass(StoreDao.class);
        registerDaoClass(ProviderEpackageDao.class);
        registerDaoClass(EPackageDao.class);
        registerDaoClass(AreaDao.class);
        registerDaoClass(RackDao.class);
        registerDaoClass(RackLevelDao.class);
        registerDaoClass(PositionDao.class);
        registerDaoClass(PositionPackageDao.class);
        registerDaoClass(EpackageTruckDao.class);
        registerDaoClass(EpackageDownloadDao.class);
        registerDaoClass(TruckPackageDao.class);
        registerDaoClass(OrderTypeDao.class);
        registerDaoClass(LevelDao.class);
        registerDaoClass(ArticleStateDao.class);
        registerDaoClass(ReceiptSheetDao.class);
        registerDaoClass(DateTypeDao.class);
        registerDaoClass(UnitDao.class);
        registerDaoClass(VArticleDao.class);
        registerDaoClass(StorePickingStatusDao.class);
        registerDaoClass(OrderPickingDao.class);
        registerDaoClass(OrderDetailDao.class);
        registerDaoClass(OrderPickingCaptureDao.class);
        registerDaoClass(OrderDetailCaptureDao.class);
        registerDaoClass(ComplaintCatDao.class);
        registerDaoClass(CheckDao.class);
        registerDaoClass(BuyDetailDao.class);
        registerDaoClass(ExpressReceiptDao.class);
        registerDaoClass(ExpressProviderDao.class);
        registerDaoClass(ExpressArticleDao.class);
        registerDaoClass(ReceiptSheetDetailCaptureDao.class);
        registerDaoClass(BuyDao.class);
        registerDaoClass(ReceiptSheetCaptureDao.class);
        registerDaoClass(ReceiptSheetDetailDao.class);
        registerDaoClass(GlobalDecreaseDao.class);
        registerDaoClass(ActivityDao.class);
        registerDaoClass(TruckDao.class);
        registerDaoClass(DriverDao.class);
        registerDaoClass(RoadmapDao.class);
        registerDaoClass(RoadmapDetailDao.class);
        registerDaoClass(RouteDao.class);
        registerDaoClass(InputTransferenceDao.class);
        registerDaoClass(InputTransferenceDetailDao.class);
        registerDaoClass(UtilizationDao.class);
        registerDaoClass(TimetableInfoDao.class);
        registerDaoClass(TimetablePickingDao.class);
        registerDaoClass(PendingDocumentDao.class);
        registerDaoClass(PendingDocumentDetailDao.class);
        registerDaoClass(ArticleTransferenceDao.class);
        registerDaoClass(ArticleResearchDao.class);
        registerDaoClass(ComplaintDao.class);
        registerDaoClass(ScannerCountDao.class);
        registerDaoClass(ObservationTypeDao.class);
        registerDaoClass(ArticleDecreaseDao.class);
        registerDaoClass(MessageDao.class);
        registerDaoClass(ReceiptExpressLogDao.class);
        registerDaoClass(BarcodeDao.class);
        registerDaoClass(DecreaseMPDao.class);
        registerDaoClass(FMuestrasDao.class);
        registerDaoClass(ReceiptCommentsDao.class);
        registerDaoClass(TripDao.class);
        registerDaoClass(TripDetailDao.class);
        registerDaoClass(QuestionDao.class);
        registerDaoClass(AnswerDao.class);
        registerDaoClass(QuestionAnswerDao.class);
        registerDaoClass(FormDao.class);
        registerDaoClass(FormQuestionDao.class);
        registerDaoClass(FormAppliedDao.class);
        registerDaoClass(FormAppliedResultDao.class);
        registerDaoClass(SheetTripDao.class);
        registerDaoClass(ShipmentControlDao.class);
    }
    
    public DaoSession newSession() {
        return new DaoSession(db, IdentityScopeType.Session, daoConfigMap);
    }
    
    public DaoSession newSession(IdentityScopeType type) {
        return new DaoSession(db, type, daoConfigMap);
    }
    
}
